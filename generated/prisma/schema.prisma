// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  posts        Post[]   @relation("UserPosts")
  sensors      Sensor[] @relation("UserSensors")
  refreshToken String
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  user      User     @relation("UserPosts", fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Sensor {
  id           Int          @id @default(autoincrement())
  name         String
  serialNumber String       @unique
  type         SensorType
  status       SensorStatus @default(ACTIVE)
  description  String
  img          String
  dateAdded    DateTime     @default(now())
  user         User         @relation("UserSensors", fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime     @default(now())
}

enum SensorType {
  TEMPERATURE
  HUMIDITY
  TEMPERATURE_HUMIDITY
}

enum SensorStatus {
  ACTIVE
  INACTIVE
}
